name: Test and Deploy

on:
  push:

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check if tests should be skipped
        id: check_skip
        run: |
          if [[ "${GITHUB_HEAD_COMMIT_MESSAGE}" == *"[skip tests]"* ]]; then
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "skip=false" >> $GITHUB_ENV
          fi

      - name: Checkout Repository
        if: env.skip == 'false'
        uses: actions/checkout@v4

      - name: Install Python
        if: env.skip == 'false'
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Update pip and install dependencies
        if: env.skip == 'false'
        run: | 
          python -m pip install --upgrade pip
          python -m pip install .[dev]

      - name: Run Tests with Pytest and Coverage
        if: env.skip == 'false'
        run: |
          coverage run -m pytest --junitxml=reports/tests/tests.xml --html=reports/tests/report.html

      - name: Generate badges and coverage
        if: env.skip == 'false'
        run: |
          genbadge tests --input-file=reports/tests/tests.xml --output-file=reports/tests/tests-badge.svg
          coverage html
          coverage xml
          genbadge coverage --output-file=reports/coverage/coverage-badge.svg
          coverage html

      - name: Commit and push badge
        if: env.skip == 'false'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add -f reports/
          git commit -m "Added reports"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.PYTEST_COVERAGE_COMMENT }}

      - name: Mark build as skipped
        if: env.skip == 'true'
        run: echo "Build skipped by commit message"

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/my_apps/scripts/
            sudo -u deployuser ./deploy_pears.sh
